eroticer@eroticer-Nitro-AN515-55:~$ docker
Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  bake        Build from a file
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Authenticate to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx
  compose*    Docker Compose
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default
                           "/home/eroticer/.docker")
  -c, --context string     Name of the context to use to connect to the
                           daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info",
                           "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/eroticer/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/eroticer/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/eroticer/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/
eroticer@eroticer-Nitro-AN515-55:~$ docker --version
Docker version 28.3.3, build 980b856
eroticer@eroticer-Nitro-AN515-55:~$ docker compose
Usage:  docker compose [OPTIONS] COMMAND

Define and run multi-container applications with Docker

Options:
      --all-resources              Include all resources, even those not
                                   used by services
      --ansi string                Control when to print ANSI control
                                   characters ("never"|"always"|"auto")
                                   (default "auto")
      --compatibility              Run compose in backward compatibility mode
      --dry-run                    Execute command in dry run mode
      --env-file stringArray       Specify an alternate environment file
  -f, --file stringArray           Compose configuration files
      --parallel int               Control max parallelism, -1 for
                                   unlimited (default -1)
      --profile stringArray        Specify a profile to enable
      --progress string            Set type of progress output (auto,
                                   tty, plain, json, quiet)
      --project-directory string   Specify an alternate working directory
                                   (default: the path of the, first
                                   specified, Compose file)
  -p, --project-name string        Project name

Management Commands:
  bridge      Convert compose files into another model

Commands:
  attach      Attach local standard input, output, and error streams to a service's running container
  build       Build or rebuild services
  commit      Create a new image from a service container's changes
  config      Parse, resolve and render compose file in canonical format
  cp          Copy files/folders between a service container and the local filesystem
  create      Creates containers for a service
  down        Stop and remove containers, networks
  events      Receive real time events from containers
  exec        Execute a command in a running container
  export      Export a service container's filesystem as a tar archive
  images      List images used by the created containers
  kill        Force stop service containers
  logs        View output from containers
  ls          List running compose projects
  pause       Pause services
  port        Print the public port for a port binding
  ps          List containers
  publish     Publish compose application
  pull        Pull service images
  push        Push service images
  restart     Restart service containers
  rm          Removes stopped service containers
  run         Run a one-off command on a service
  scale       Scale services 
  start       Start services
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop services
  top         Display the running processes
  unpause     Unpause services
  up          Create and start containers
  version     Show the Docker Compose version information
  volumes     List volumes
  wait        Block until containers of all (or specified) services stop.
  watch       Watch build context for service and rebuild/refresh containers when files are updated

Run 'docker compose COMMAND --help' for more information on a command.
eroticer@eroticer-Nitro-AN515-55:~$ docker compose version
Docker Compose version v2.39.1
eroticer@eroticer-Nitro-AN515-55:~$ ls
 Admin                                                     simple-website
 build                                                     snap
 build.sh                                                  ubuntu-fan.conf
 docker                                                    vagrant
 easy-rsa                                                  vagrant-vm
 get_helm.sh                                              'VirtualBox VMs'
 go                                                        walker.sh
 hello-world                                               whoopsie.conf
 helm-repos                                                Видео
 helm-v3.14.0-linux-amd64.tar.gz                           Документы
 linux-amd64                                               Загрузки
 minikube_latest_amd64.deb                                 Изображения
 minikube_latest_arm64.deb                                 Музыка
 minikube-latest.x86_64.rpm                                Общедоступные
 Oracle_VM_VirtualBox_Extension_Pack-6.1.50.vbox-extpack  'Рабочий стол'
 raketa                                                    Шаблоны
 script.sh
eroticer@eroticer-Nitro-AN515-55:~$ cd docker
eroticer@eroticer-Nitro-AN515-55:~/docker$ ls
apache  docker-compose  dockerfile  env-test  files  php  python
eroticer@eroticer-Nitro-AN515-55:~/docker$ cd ..
eroticer@eroticer-Nitro-AN515-55:~$ sudo usermod -aG docker $USER
eroticer@eroticer-Nitro-AN515-55:~$ mkdir custom-nginx && cd custom-nginx
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ nano Dockerfile
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ ls
Dockerfile
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ nano index.html
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker build -t my-custom-nginx:1.0 .
[+] Building 19.5s (8/8) FINISHED                                docker:default
 => [internal] load build definition from Dockerfile                       0.4s
 => => transferring dockerfile: 185B                                       0.0s
 => [internal] load metadata for docker.io/library/nginx:alpine            3.5s
 => [internal] load .dockerignore                                          0.3s
 => => transferring context: 2B                                            0.0s
 => [1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b76  6.0s
 => => resolve docker.io/library/nginx:alpine@sha256:42a516af16b852e33b76  0.4s
 => => sha256:60e48a050b6408d0c5dd59b98b6e36bf0937a0bbe99 2.50kB / 2.50kB  0.0s
 => => sha256:4a86014ec6994761b7f3118cf47e4b4fd6bac15fc 10.78kB / 10.78kB  0.0s
 => => sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fe 10.33kB / 10.33kB  0.0s
 => => sha256:6bc572a340ecbc60aca0c624f76b32de0b073d5efa4 1.81MB / 1.81MB  0.8s
 => => sha256:9adfbae99cb79774fdc14ca03a0a0154b8c199a69f69316 955B / 955B  1.3s
 => => sha256:403e3f251637881bbdc5fb06df8da55c149c00ccb0addbc 628B / 628B  1.2s
 => => extracting sha256:6bc572a340ecbc60aca0c624f76b32de0b073d5efa4fa1e0  0.6s
 => => sha256:7a8a46741e18ed98437271669138116163f14596f411c19 405B / 405B  1.6s
 => => sha256:c9ebe2ff2d2cd981811cefb6df49a116da6074c770c 1.21kB / 1.21kB  1.9s
 => => sha256:a992fbc61ecc9d8291c27f9add7b8a07d374c06a435 1.40kB / 1.40kB  2.2s
 => => extracting sha256:403e3f251637881bbdc5fb06df8da55c149c00ccb0addbcb  0.0s
 => => sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5 16.84MB / 16.84MB  3.1s
 => => extracting sha256:9adfbae99cb79774fdc14ca03a0a0154b8c199a69f69316b  0.0s
 => => extracting sha256:7a8a46741e18ed98437271669138116163f14596f411c194  0.0s
 => => extracting sha256:c9ebe2ff2d2cd981811cefb6df49a116da6074c770c07ee8  0.0s
 => => extracting sha256:a992fbc61ecc9d8291c27f9add7b8a07d374c06a435d4734  0.0s
 => => extracting sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302ae  0.3s
 => [internal] load build context                                          0.5s
 => => transferring context: 534B                                          0.0s
 => [2/3] RUN apk update && apk upgrade                                    6.9s
 => [3/3] COPY index.html /usr/share/nginx/html/index.html                 0.7s
 => exporting to image                                                     0.7s
 => => exporting layers                                                    0.4s
 => => writing image sha256:220cd768e97ad5cbd6551cdf518818848ffe3704182e5  0.0s
 => => naming to docker.io/library/my-custom-nginx:1.0                     0.0s

 1 warning found (use docker --debug to expand):
 - JSONArgsRecommended: JSON arguments recommended for CMD to prevent unintended behavior related to OS signals (line 9)
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker --debug to expand)
bash: синтаксическая ошибка рядом с неожиданным маркером «)»
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker --debug to expand
docker: unknown command: docker to

Run 'docker --help' for more information
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker --debug
Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  bake        Build from a file
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Authenticate to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx
  compose*    Docker Compose
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default
                           "/home/eroticer/.docker")
  -c, --context string     Name of the context to use to connect to the
                           daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info",
                           "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/eroticer/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/eroticer/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/eroticer/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker --debugmy-custom-nginx:1.0
unknown flag: --debugmy-custom-nginx:1.0

Usage:  docker [OPTIONS] COMMAND [ARG...]

Run 'docker --help' for more information
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker --debug my-custom-nginx:1.0
docker: unknown command: docker my-custom-nginx:1.0

Run 'docker --help' for more information
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ nano Dockerfile
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker build -t my-custom-nginx:1.0 .
[+] Building 2.1s (8/8) FINISHED                                 docker:default
 => [internal] load build definition from Dockerfile                       0.1s
 => => transferring dockerfile: 185B                                       0.0s
 => [internal] load metadata for docker.io/library/nginx:alpine            0.8s
 => [internal] load .dockerignore                                          0.1s
 => => transferring context: 2B                                            0.0s
 => [1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b76  0.0s
 => [internal] load build context                                          0.1s
 => => transferring context: 32B                                           0.0s
 => CACHED [2/3] RUN apk update && apk upgrade                             0.0s
 => CACHED [3/3] COPY index.html /usr/share/nginx/html/index.html          0.0s
 => exporting to image                                                     0.2s
 => => exporting layers                                                    0.0s
 => => writing image sha256:d21b6f697e63f222916c28df7d9c5a6fa906c49943662  0.0s
 => => naming to docker.io/library/my-custom-nginx:1.0                     0.0s
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker run -d -p 8080:80 --name my-nginx my-custom-nginx:1.0
54b2937b40dd5418ef1530683242e43322e9f45d4f4ee2284e0d2c1628da66ff
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ curl http://localhost:8080
<!DOCTYPE html>
<html>
<head>
    <title>Custom Nginx Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin-top: 100px;
            background-color: #f0f0f0;
        }
        h1 {
            color: #333;
        }
    </style>
</head>
<body>
    <h1>Welcome to My Custom Nginx!</h1>
    <p>This is a custom page running on Alpine-based Nginx container</p>
    <p>Created for Docker homework</p>
</body>
</html>
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker logs my-nginx
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2025/09/09 18:54:02 [notice] 1#1: using the "epoll" event method
2025/09/09 18:54:02 [notice] 1#1: nginx/1.29.1
2025/09/09 18:54:02 [notice] 1#1: built by gcc 14.2.0 (Alpine 14.2.0) 
2025/09/09 18:54:02 [notice] 1#1: OS: Linux 6.8.0-79-generic
2025/09/09 18:54:02 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2025/09/09 18:54:02 [notice] 1#1: start worker processes
2025/09/09 18:54:02 [notice] 1#1: start worker process 30
2025/09/09 18:54:02 [notice] 1#1: start worker process 31
2025/09/09 18:54:02 [notice] 1#1: start worker process 32
2025/09/09 18:54:02 [notice] 1#1: start worker process 33
2025/09/09 18:54:02 [notice] 1#1: start worker process 34
2025/09/09 18:54:02 [notice] 1#1: start worker process 35
2025/09/09 18:54:02 [notice] 1#1: start worker process 36
2025/09/09 18:54:02 [notice] 1#1: start worker process 37
172.17.0.1 - - [09/Sep/2025:18:54:26 +0000] "GET / HTTP/1.1" 200 495 "-" "curl/7.81.0" "-"
172.17.0.1 - - [09/Sep/2025:18:54:50 +0000] "GET / HTTP/1.1" 200 495 "-" "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:142.0) Gecko/20100101 Firefox/142.0" "-"
2025/09/09 18:54:50 [error] 31#31: *2 open() "/usr/share/nginx/html/favicon.ico" failed (2: No such file or directory), client: 172.17.0.1, server: localhost, request: "GET /favicon.ico HTTP/1.1", host: "localhost:8080", referrer: "http://localhost:8080/"
172.17.0.1 - - [09/Sep/2025:18:54:50 +0000] "GET /favicon.ico HTTP/1.1" 404 153 "http://localhost:8080/" "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:142.0) Gecko/20100101 Firefox/142.0" "-"
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker stop my-nginx
my-nginx
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker login

USING WEB-BASED LOGIN

i Info → To sign in with credentials on the command line, use 'docker login -u <username>'
         

Your one-time device confirmation code is: NTDQ-VBDL
Press ENTER to open your browser or submit your device code here: https://login.docker.com/activate

Waiting for authentication in the browser…



WARNING! Your credentials are stored unencrypted in '/home/eroticer/.docker/config.json'.
Configure a credential helper to remove this warning. See
https://docs.docker.com/go/credential-store/

Login Succeeded
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ 
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ nano /home/eroticer/.docker/config.json
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker login
Authenticating with existing credentials... [Username: eroticer]

i Info → To login with a different account, run 'docker logout' followed by 'docker login'


Login Succeeded
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker tag my-custom-nginx:1.0 eroticer/custom-nginx:1.0
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ docker push eroticer/custom-nginx:1.0 
The push refers to repository [docker.io/eroticer/custom-nginx]
f98b0499d818: Pushed 
24643008407a: Pushed 
f9985d3fc94d: Mounted from library/nginx 
d208138be39d: Mounted from library/nginx 
a2b76470e8f1: Mounted from library/nginx 
917b2c97271e: Mounted from library/nginx 
16ca725632e5: Mounted from library/nginx 
7978a9c91f72: Mounted from library/nginx 
b6ff0212304e: Mounted from library/nginx 
418dccb7d85a: Mounted from library/nginx 
1.0: digest: sha256:0599fbda388e8bb91875b17e0160480f2802d8c9f9dee7e00fb85e913f152bd2 size: 2407
eroticer@eroticer-Nitro-AN515-55:~/custom-nginx$ https://hub.docker.com/r/eroticer/custom-nginx
